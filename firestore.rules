rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow admins to do anything
    match /{document=**} {
      allow read, write: if hasRole('admin');
    }
    
    // Users collection
    match /users/{userId} {
      allow create: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null;
      allow update: if request.auth != null && request.auth.uid == userId;
      allow delete: if false;
    }
    
    // Applications collection
    match /applications/{applicationId} {
      // Students can create their own applications
      allow create: if request.auth != null && 
        request.resource.data.userId == request.auth.uid && 
        hasRole('student');
      
      // Allow reading by owner, admin, or assigned interviewer
      allow read: if request.auth != null && 
        (resource.data.userId == request.auth.uid || 
         isAssignedInterviewer(applicationId));
      
      // Allow updates by admin or assigned interviewer
      allow update: if request.auth != null && 
        isAssignedInterviewer(applicationId);
    }
    
    // Helper functions
    function hasRole(role) {
      let userDoc = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      return userDoc != null && userDoc.role != null && userDoc.role[role] == true;
    }
    
    function isAssignedInterviewer(applicationId) {
      let appDoc = get(/databases/$(database)/documents/applications/$(applicationId)).data;
      
      // Check if the user is an interviewer and is assigned to this application
      return hasRole('interviewer') && appDoc.interviews != null && 
        ((appDoc.interviews.interview1 != null && 
          appDoc.interviews.interview1.interviewerId == request.auth.email) || 
         (appDoc.interviews.interview2 != null && 
          appDoc.interviews.interview2.interviewerId == request.auth.email) || 
         (appDoc.interviews.interview3 != null && 
          appDoc.interviews.interview3.interviewerId == request.auth.email));
    }
  }
}